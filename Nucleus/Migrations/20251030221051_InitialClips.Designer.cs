// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Nucleus.Repository;

#nullable disable

namespace Nucleus.Migrations
{
    [DbContext(typeof(NucleusDbContext))]
    [Migration("20251030221051_InitialClips")]
    partial class InitialClips
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nucleus.Repository.Clip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("CategoryEnum")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("owner_id");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uuid")
                        .HasColumnName("video_id");

                    b.HasKey("Id")
                        .HasName("clip_pkey");

                    b.ToTable("clip", (string)null);
                });

            modelBuilder.Entity("Nucleus.Repository.ClipCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("CategoryEnum")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("collection_id");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("owner_id");

                    b.HasKey("Id")
                        .HasName("clip_collection_pkey");

                    b.HasIndex(new[] { "OwnerId" }, "ix_clip_collection__owner_id");

                    b.ToTable("clip_collection", (string)null);
                });

            modelBuilder.Entity("Nucleus.Repository.DiscordUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("discord_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("discord_user_pkey");

                    b.HasIndex(new[] { "DiscordId" }, "uq_discord_user_discord_id")
                        .IsUnique();

                    b.ToTable("discord_user", (string)null);
                });

            modelBuilder.Entity("Nucleus.Repository.UserFrequentLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("text")
                        .HasColumnName("thumbnail_url");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("user_frequent_link_pkey");

                    b.HasIndex(new[] { "UserId" }, "ix_user_frequent_link__user_id");

                    b.ToTable("user_frequent_link", (string)null);
                });

            modelBuilder.Entity("Nucleus.Repository.ClipCollection", b =>
                {
                    b.HasOne("Nucleus.Repository.DiscordUser", null)
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_clip_collection__discord_user");
                });

            modelBuilder.Entity("Nucleus.Repository.UserFrequentLink", b =>
                {
                    b.HasOne("Nucleus.Repository.DiscordUser", "User")
                        .WithMany("UserFrequentLinks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_frequent_link__user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nucleus.Repository.DiscordUser", b =>
                {
                    b.Navigation("UserFrequentLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
